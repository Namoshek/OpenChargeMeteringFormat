name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Test dotnet ${{ matrix.dotnet-version }} on ${{ matrix.operating-system }}

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: ['ubuntu-latest', 'windows-latest']
        dotnet-version: ['6.0.x']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for SonarQube
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dotnet-coverage
        shell: bash
        run: dotnet tool install --global dotnet-coverage

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin \
              /k:"Namoshek_OpenChargeMeteringFormat" \
              /o:"namoshek" \
              /d:sonar.host.url="https://sonarcloud.io" \
              /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
              /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --configuration "Release" --no-incremental
          dotnet-coverage collect 'dotnet test --no-restore --no-build --configuration Release' -f xml -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end \
              /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
